name: R2C-OpenWrt

on: workflow_dispatch
#  schedule:
#    - cron: 5 6 * * 0
#  watch:
#    types: started

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    
    - name: Checkout
      uses: actions/checkout@main
      
    - name: Initialization Environment
      run: |
        root_files=$(ls / | grep -vE '^(proc|run|sys)$' | sed 's:^:/:')
        sudo -E du -ah $root_files | grep -E '^[0-9.]*?[GTPEZY]'
        sudo -E docker image prune -a -f
        sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf
        wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash
        git config --global user.email "yuaolni@gmail.com"
        git config --global user.name "MoozIiSP"

    - name: Install Repo and initialize source for rk3328
      run: |
        mkdir rk3328
        cd rk3328
        git clone https://github.com/friendlyarm/repo --depth 1 tools
        tools/repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v22.03 \
                -m rk3328.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle
        tools/repo sync -c  --no-clone-bundle
        
    - name: Add custom packages
      run: |
        cd rk3328/friendlywrt
        wget https://github.com/QiuSimons/YAOF/raw/22.03/SCRIPTS/02_prepare_package.sh
        bash 02_prepare_package.sh

    - name: Build FriendlyWrt
      run: |
        cd rk3328
        set +e
        ./build.sh nanopi_r2s.mk
        build_status=$?
        set -e
        sudo -E df -lh
        exit $build_status

    - name: Assemble Artifact
      run: |
        rm -rf ./artifact/
        mkdir -p ./artifact/
        gzip rk3328/out/FriendlyWrt*.img
        cp rk3328/out/FriendlyWrt*.img.gz ./artifact/

    # 保存交叉编译配置, 需要先设置平台
    - name: Save Configurations
      run: |
        cd rk3328/friendlywrt
        ./scripts/diffconfig.sh > ../../artifact/config-lite
        cp .config ../../artifact/config-full
        cd ../kernel
        export PATH=/opt/FriendlyARM/toolchain/6.4-aarch64/bin/:$PATH
        export CROSS_COMPILE='aarch64-linux-gnu-'
        export ARCH=arm64
        make savedefconfig
        cp .config ../../artifact/kconfig-full
        cp defconfig ../../artifact/kconfig-lite

    - name: Upload Artifact
      uses: actions/upload-artifact@master
      with:
        name: FriendlyWrt
        path: ./artifact/
